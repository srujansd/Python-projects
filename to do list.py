{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fdbbb5f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to the To-Do List Manager\n",
      "\n",
      "Menu:\n",
      "1. Add Task\n",
      "2. Update Task\n",
      "3. Mark Task as Completed\n",
      "4. Delete Task\n",
      "5. View Tasks\n",
      "6. Exit\n"
     ]
    }
   ],
   "source": [
    "# TASK-1 To-Do-List\n",
    "import sys\n",
    "\n",
    "class ToDoItem:\n",
    "    def __init__(self, description):\n",
    "        self.description = description\n",
    "        self.completed = False\n",
    "\n",
    "    def __str__(self):\n",
    "        status = \"✓\" if self.completed else \"✗\"\n",
    "        return f\"{status} {self.description}\"\n",
    "\n",
    "class ToDoList:\n",
    "    def __init__(self):\n",
    "        self.items = []\n",
    "\n",
    "    def add_item(self, description):\n",
    "        new_item = ToDoItem(description)\n",
    "        self.items.append(new_item)\n",
    "        print(\"Task added successfully.\")\n",
    "\n",
    "    def update_item(self, index, new_description):\n",
    "        if 0 <= index < len(self.items):\n",
    "            self.items[index].description = new_description\n",
    "            print(\"Task updated successfully.\")\n",
    "        else:\n",
    "            print(\"Invalid index. Please try again.\")\n",
    "\n",
    "    def mark_complete(self, index):\n",
    "        if 0 <= index < len(self.items):\n",
    "            self.items[index].completed = True\n",
    "            print(\"Task marked as completed.\")\n",
    "        else:\n",
    "            print(\"Invalid index. Please try again.\")\n",
    "\n",
    "    def delete_item(self, index):\n",
    "        if 0 <= index < len(self.items):\n",
    "            del self.items[index]\n",
    "            print(\"Task deleted successfully.\")\n",
    "        else:\n",
    "            print(\"Invalid index. Please try again.\")\n",
    "\n",
    "    def display_items(self):\n",
    "        if not self.items:\n",
    "            print(\"No tasks found.\")\n",
    "        else:\n",
    "            for idx, item in enumerate(self.items, start=1):\n",
    "                print(f\"{idx}. {item}\")\n",
    "\n",
    "def main():\n",
    "    todo_list = ToDoList()\n",
    "    print(\"Welcome to the To-Do List Manager\")\n",
    "\n",
    "    while True:\n",
    "        print(\"\\nMenu:\")\n",
    "        print(\"1. Add Task\")\n",
    "        print(\"2. Update Task\")\n",
    "        print(\"3. Mark Task as Completed\")\n",
    "        print(\"4. Delete Task\")\n",
    "        print(\"5. View Tasks\")\n",
    "        print(\"6. Exit\")\n",
    "\n",
    "        choice = input(\"Choose an option: \")\n",
    "\n",
    "        if choice == '1':\n",
    "            description = input(\"Enter the task description: \")\n",
    "            todo_list.add_item(description)\n",
    "        elif choice == '2':\n",
    "            try:\n",
    "                index = int(input(\"Enter the task number to update: \")) - 1\n",
    "                new_description = input(\"Enter the new task description: \")\n",
    "                todo_list.update_item(index, new_description)\n",
    "            except ValueError:\n",
    "                print(\"Invalid input. Please enter a valid number.\")\n",
    "        elif choice == '3':\n",
    "            try:\n",
    "                index = int(input(\"Enter the task number to mark as completed: \")) - 1\n",
    "                todo_list.mark_complete(index)\n",
    "            except ValueError:\n",
    "                print(\"Invalid input. Please enter a valid number.\")\n",
    "        elif choice == '4':\n",
    "            try:\n",
    "                index = int(input(\"Enter the task number to delete: \")) - 1\n",
    "                todo_list.delete_item(index)\n",
    "            except ValueError:\n",
    "                print(\"Invalid input. Please enter a valid number.\")\n",
    "        elif choice == '5':\n",
    "            todo_list.display_items()\n",
    "        elif choice == '6':\n",
    "            print(\"Exiting the To-Do List Manager. Goodbye!\")\n",
    "            sys.exit()\n",
    "        else:\n",
    "            print(\"Invalid choice. Please try again.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ab0afee1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
